---
# tasks file for ansible-terraform-docs
- name: check if terraform-docs folder exists
  stat: 
    path: /opt/terraform-docs
  register: terraform_docs_io_folder_exists
  tags: terraform-docs
  
- name: Create terraform-docs directory
  ansible.builtin.file:
    path: /opt/terraform-docs
    state: directory
    mode: '0755'
  tags: terraform-docs
  when: terraform_docs_io_folder_exists.stat.exists == False

- name: Get latest Release from terraform-docs
  shell: curl -Lo /opt/terraform-docs/terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep tag_name | cut -d '"' -f 4)/terraform-docs-$(curl -s https://api.github.com/repos/terraform-docs/terraform-docs/releases/latest | grep tag_name | cut -d '"' -f 4)-linux-amd64.tar.gz
  # args:
  #   warn: no
  tags: terraform-docs

- name: Unarchive a file
  shell: tar -xzf /opt/terraform-docs/terraform-docs.tar.gz -C /opt/terraform-docs/
  # args:
  #   warn: no
  tags: terraform-docs

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: /opt/terraform-docs/
    owner: root
    group: root
    mode: '0755'
  tags: terraform-docs

- name: Verify terraform-docs exists
  stat: path=/opt/terraform-docs/terraform-docs
  register: terraform_docs_io_stat
  tags: terraform-docs

- name: Configure terraform-docs on system bin.
  file:
    src: "/opt/terraform-docs/terraform-docs"
    dest: "/usr/bin/terraform-docs"
    state: link
  when: terraform_docs_io_stat.stat.exists
  tags: terraform-docs

- name: Configure terraform-docs on system sbin.
  file:
    src: "/opt/terraform-docs/terraform-docs" 
    dest: "/usr/sbin/terraform-docs"
    state: link
  when: terraform_docs_io_stat.stat.exists
  tags: terraform-docs

# Customize Per existing user
- name : list users to apply terraform-docs
  shell: |
    getent passwd | awk -F: '$3 > 999 {print $1}'
  register: users
  tags: terraform-docs

- debug:
    var: users
    verbosity: 2

- name: Create user bin directory
  file: path=/home/{{ item }}/.local/bin/ state=directory mode="a+rw"
  when: terraform_docs_io_stat.stat.exists
  with_items: "{{ users.stdout_lines }}"
  tags: terraform-docs

- name: Configure terraform-docs on user bin.
  file:
    src: "/opt/terraform-docs/terraform-docs"
    dest: "/home/{{ item }}/.local/bin/terraform-docs"
    state: link
  with_items: "{{ users.stdout_lines }}"
  when: terraform_docs_io_stat.stat.exists
  tags: terraform-docs

- name: Create user bin directory
  file: path=/home/{{ item }}/.local/bin/ state=directory mode="a+rw"
  when: terraform_docs_io_stat.stat.exists
  with_items: "{{ users.stdout_lines }}"
  tags: terraform-docs

- name: update terraform-docs on users bashrc
  lineinfile:
    dest: /home/{{ item }}/.bashrc
    state: present
    line: 'export PATH="/opt/terraform-docs/:$PATH"'
  with_items: "{{ users.stdout_lines }}"
  tags: terraform-docs
  ignore_errors: true

- name: update terraform-docs on skel bashrc
  lineinfile:
    dest: /etc/skel/.bashrc
    state: present
    line: 'export PATH="/opt/terraform-docs/:$PATH"'
  tags: terraform-docs

# Check status
- shell: which terraform-docs
  args:
    executable: /bin/bash -ilc
  register: which_terraform_docs_io
  failed_when: false
  changed_when: false
  tags: terraform-docs

- debug:
    var:  which_terraform_docs_io.stdout
    verbosity: 2

- command: terraform-docs version
  register: result_terraform_docs_io
  failed_when: false
  changed_when: false
  tags: terraform-docs

- debug:
    var: result_terraform_docs_io.stdout
  tags: terraform-docs